name: Deploy 3rd Party Tracer to GitHub Pages

on:
  # Trigger on release published
  release:
    types: [published]
  
  # Allow manual trigger from Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - staging
  
  # Trigger on push to main branch (optional - remove if not needed)
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - '**.html'
  #     - '**.css'
  #     - '**.js'
  #     - '!docs/**'
  #     - '!_site/**'

# Minimal permissions following principle of least privilege
permissions:
  contents: read      # Only read repository contents
  pages: write        # Deploy to GitHub Pages
  id-token: write     # Verify deployment origin (OIDC)

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          # Don't fetch history, only need current state
          fetch-depth: 1
      
      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0
      
      - name: Create deployment directory
        run: |
          mkdir -p _site/js _site/css
          echo "📦 Copying production files..."
          
          # Core HTML files
          cp index.html _site/
          cp about.html _site/
          echo "✅ Copied 2 HTML files"
          
          # CSS file
          cp css/style.css _site/css/
          echo "✅ Copied CSS file"
          
          # JavaScript files
          cp js/logger.js _site/js/
          cp js/app.js _site/js/
          cp js/dns-analyzer.js _site/js/
          cp js/service-detection-engine.js _site/js/
          cp js/data-processor.js _site/js/
          cp js/ui-renderer.js _site/js/
          cp js/analysis-controller.js _site/js/
          cp js/export-manager.js _site/js/
          echo "✅ Copied 8 JavaScript files"
      
      - name: Generate release status
        run: |
          echo "📅 Generating release status..."
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S %Z')
          echo "Last deployment: $TIMESTAMP" > _site/release-status.txt
          echo "Deployment script version: 2.0 (GitHub Actions)" >> _site/release-status.txt
          echo "Generated by: GitHub Actions" >> _site/release-status.txt
          echo "Commit SHA: ${{ github.sha }}" >> _site/release-status.txt
          echo "Triggered by: ${{ github.event_name }}" >> _site/release-status.txt
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "Release: ${{ github.event.release.tag_name }}" >> _site/release-status.txt
          fi
      
      - name: Create .nojekyll file
        run: |
          echo "🔧 Creating .nojekyll file to prevent Jekyll processing..."
          touch _site/.nojekyll
      
      - name: Verify deployment files
        run: |
          echo "✅ Verifying deployment files..."
          
          required_files=(
            "index.html"
            "about.html"
            "css/style.css"
            "js/logger.js"
            "js/app.js"
            "js/dns-analyzer.js"
            "js/service-detection-engine.js"
            "js/data-processor.js"
            "js/ui-renderer.js"
            "js/analysis-controller.js"
            "js/export-manager.js"
            "release-status.txt"
            ".nojekyll"
          )
          
          missing_files=()
          
          for file in "${required_files[@]}"; do
            if [ ! -f "_site/$file" ]; then
              missing_files+=("$file")
            fi
          done
          
          if [ ${#missing_files[@]} -eq 0 ]; then
            echo "✅ All required files successfully copied to _site/"
            echo ""
            echo "📊 Deployment Summary:"
            echo "   - HTML files: $(ls -1 _site/*.html 2>/dev/null | wc -l)"
            echo "   - JS files: $(ls -1 _site/js/*.js 2>/dev/null | wc -l)"
            echo "   - CSS files: $(ls -1 _site/css/*.css 2>/dev/null | wc -l)"
            echo ""
            echo "📁 Contents of _site/:"
            ls -lh _site/
            echo ""
            echo "📁 JS files:"
            ls -lh _site/js/
            echo ""
            echo "📁 CSS files:"
            ls -lh _site/css/
          else
            echo "❌ Error: The following files are missing from _site/:"
            for file in "${missing_files[@]}"; do
              echo "   - $file"
            done
            exit 1
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          # Upload only necessary files (excludes .git, node_modules, etc.)
          path: '_site'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
      
      - name: Deployment summary
        run: |
          echo "## 🚀 Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Successfully deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "📦 Release: ${{ github.event.release.tag_name }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "🔗 URL: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "📅 Deployment time: $(date '+%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Deployment Details" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Trigger: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Files deployed: 13 (2 HTML, 1 CSS, 8 JS, 2 metadata)" >> $GITHUB_STEP_SUMMARY

